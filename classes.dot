digraph "classes" {
rankdir=BT
charset="utf-8"
"NF4HEP.data.Data" [color="black", fontcolor="black", label="{Data|figures\lfile_manager\llog : Dict\lname : str\lparameters\lpredictions\l|}", shape="record", style="solid"];
"NF4HEP.data.DataFileManager" [color="black", fontcolor="black", label="{DataFileManager|obj_name : str\loutput_figures_base_file_name\loutput_figures_base_file_path : Path\loutput_figures_folder : Path\loutput_predictions_json_file : Path\l|}", shape="record", style="solid"];
"NF4HEP.data.DataInference" [color="black", fontcolor="black", label="{DataInference|log : Dict\lparameters\lpredictions\lsave : Callable\lsave_log : Callable\l|}", shape="record", style="solid"];
"NF4HEP.data.DataParsManager" [color="black", fontcolor="black", label="{DataParsManager|\l|}", shape="record", style="solid"];
"NF4HEP.data.DataPlots" [color="black", fontcolor="black", label="{DataPlots|figures\lfile_manager\llog : Dict\lname_str : str\lparameters\lpredictions\lsave : Callable\lsave_log : Callable\l|}", shape="record", style="solid"];
"NF4HEP.data.DataPredictions" [color="black", fontcolor="black", label="{DataPredictions|\l|}", shape="record", style="solid"];
"NF4HEP.distributions.Distributions" [color="black", fontcolor="black", label="{Distributions|base_distribution : NoneType\lbase_distribution_string\ldefault_dist : str\ldtype : str, NoneType\llog : dict\lndims : NoneType\lsupported_default_base_distributions : list\ltf_dist : NoneType\lverbose : bool\l|Normal()\lNormal_mixture()\l}", shape="record", style="solid"];
"NF4HEP.base.Figures" [color="black", fontcolor="black", label="{Figures|figures : NoneType, dict\l|check_delete_figures(file_manager: FileManager, delete_figures: bool, verbose: Optional[IntBool]): None\lcheck_figures_dic(output_figures_folder: Path): Dict[str, List[Path]]\lcheck_figures_list(fig_list: List[Path], output_figures_folder: Path): List[Path]\lreset_figures(log: LogPredDict, file_manager: FileManager, delete_figures: bool, verbose: Union[int, bool, None]): None\lshow_figures(fig_list: List[Union[str, Path]]): None\lupdate_figures(figure_file: StrPath, file_manager: FileManager, log: LogPredDict, timestamp: Optional[str], overwrite: Union[str, bool], verbose: Union[int, bool, None]): Path\l}", shape="record", style="solid"];
"NF4HEP.base.FileManager" [color="black", fontcolor="black", label="{FileManager|allowed_objects : list\lallowed_types : Union\linput_file : Path\linput_folder : Path\linput_h5_file : Path\linput_log_file : Path\lname\lname_str : NoneType\lobj_name : str\loutput_figures_base_file_name\loutput_figures_base_file_path : Path\loutput_figures_folder : Path\loutput_folder : Path, NoneType\loutput_h5_file : Path\loutput_json_file : Path\loutput_log_file : Path\loutput_predictions_json_file : Path\ltimestamp\l|check_create_folder(folder_path: StrPath): Path\lcheck_delete_all_files_in_path(folder_path: StrPath): None\lcheck_delete_all_folders_in_path(folder_path: StrPath): None\lcheck_delete_all_items_in_path(folder_path: StrPath): None\lcheck_delete_files_folders(paths: List[Path]): None\lcheck_rename_path(from_path: StrPath, timestamp: Optional[str], verbose: Optional[IntBool]): Path\lcopy_and_save_folder(from_path: StrPath, to_path: StrPath, timestamp: Optional[str], verbose: Union[int, bool, None]): None\lgenerate_dump_file_name(filepath: StrPath, timestamp: Optional[str]): Path\lget_parent_path(this_path: StrPath, level: int): Path\lget_target_file_overwrite(input_file: StrPath, timestamp: Optional[str], overwrite: Union[str, bool], verbose: Union[int, bool, None]): Path\lprint_save_info(filename: StrPath, time: str, extension_string: Union[str, None], overwrite: Union[str, bool], verbose: Union[int, bool, None]): None\lreplace_strings_in_file(filename: StrPath, old_strings: str, new_string: str): None\lsave_h5(dict_to_save: Dict, log: LogPredDict, overwrite: StrBool, verbose: Optional[Union[int, bool]]): None\lsave_json(dict_to_save: Dict, log: LogPredDict, overwrite: StrBool, verbose: Optional[Union[int, bool]]): None\lsave_log(log: LogPredDict, overwrite: StrBool, verbose: Optional[IntBool]): None\l}", shape="record", style="solid"];
"NF4HEP.base.Inference" [color="black", fontcolor="black", label="{Inference|\l|CI_from_sigma(sigma: Union[Number, Array]): Union[float, Array]\lHPDI(data: Array, intervals: Union[Number, Array], weights: Optional[Array], nbins: int, print_hist: bool, optimize_binning: bool): Dict[Number, Dict[str, Any]]\lHPDI_error(HPDI): Dict[Number, Dict[str, Any]]\lHPD_quotas(data: Array, intervals: Union[Number, Array], weights: Optional[Array], nbins: int, from_top: bool)\ldelta_chi2_from_CI(CI: Union[float, Array], dof: Union[Number, Array]): Union[float, Array]\lks_w(data1: Array, data2: Array, wei1: Optional[Array], wei2: Optional[Array]): List[float]\lsigma_from_CI(CI: Union[float, Array]): Union[float, Array]\lsort_consecutive(data: Array, stepsize: Number)\lweighted_central_quantiles(data: Array, quantiles: Union[Number, Array], weights: Optional[Array], onesided: bool): list\lweighted_quantiles(data: Array, quantiles: Union[Number, Array], weights: Optional[Array], data_sorted: bool, onesided: bool): npt.NDArray\l}", shape="record", style="solid"];
"NF4HEP.base.InputFileNotFoundError" [color="black", fontcolor="red", label="{InputFileNotFoundError|\l|}", shape="record", style="solid"];
"NF4HEP.base.InvalidPredictions" [color="black", fontcolor="red", label="{InvalidPredictions|\l|}", shape="record", style="solid"];
"NF4HEP.maf.MAFBijector_custom" [color="black", fontcolor="black", label="{MAFBijector_custom|model_define_inputs\lmodel_flow_inputs\lrange_min\lspline_knots\lverbose : bool\l|get_config()\l}", shape="record", style="solid"];
"NF4HEP.maf.MAFBijector_default" [color="black", fontcolor="black", label="{MAFBijector_default|model_define_inputs\lverbose : bool\l|get_config()\l}", shape="record", style="solid"];
"NF4HEP.maf.MAFFlow" [color="black", fontcolor="black", label="{MAFFlow|model_define_inputs\lmodel_flow_inputs\lverbose : bool\l|get_config()\l}", shape="record", style="solid"];
"NF4HEP.maf.MAFNetwork_custom" [color="black", fontcolor="black", label="{MAFNetwork_custom|event_shape\lmodel_define_inputs\lparams\lverbose : bool\l|build(input_shape)\lcall(x, conditional_input)\lcompute_output_shape(input_shape)\lget_config()\l}", shape="record", style="solid"];
"NF4HEP.maf.MAFNetwork_default" [color="black", fontcolor="black", label="{MAFNetwork_default|model_define_inputs\lverbose : bool\l|get_config()\l}", shape="record", style="solid"];
"NF4HEP.nf.NF" [color="black", fontcolor="black", label="{NF|Bijector\lFlow : allowed_flow_types\lNN\lallowed_flow_types : Union\lallowed_flows : list\lbase_distribution\lfigures\lfile_manager\llog : Dict\lname : str\lparameters\lpredictions\l|}", shape="record", style="solid"];
"NF4HEP.nf.NFFileManager" [color="black", fontcolor="black", label="{NFFileManager|obj_name : str\loutput_figures_base_file_name\loutput_figures_base_file_path : Path\loutput_figures_folder : Path\loutput_predictions_json_file : Path\l|}", shape="record", style="solid"];
"NF4HEP.nf.NFInference" [color="black", fontcolor="black", label="{NFInference|log : Dict\lparameters\lpredictions\lsave : Callable\lsave_log : Callable\l|}", shape="record", style="solid"];
"NF4HEP.nf.NFParsManager" [color="black", fontcolor="black", label="{NFParsManager|\l|}", shape="record", style="solid"];
"NF4HEP.nf.NFPlots" [color="black", fontcolor="black", label="{NFPlots|figures\lfile_manager\llog : Dict\lname_str : str\lparameters\lpredictions\lsave : Callable\lsave_log : Callable\l|}", shape="record", style="solid"];
"NF4HEP.nf.NFPredictions" [color="black", fontcolor="black", label="{NFPredictions|\l|}", shape="record", style="solid"];
"NF4HEP.base.Name" [color="black", fontcolor="black", label="{Name|name_str : NoneType, str\lobj_name : str\l|}", shape="record", style="solid"];
"NF4HEP.base.ParsManager" [color="black", fontcolor="black", label="{ParsManager|allowed_objects : list\lallowed_types : Union\lndims\lobj_name : str\lpars_bounds : ndarray\lpars_central : ndarray\lpars_labels : list\lpars_labels_auto : list\lpars_pos_nuis : ndarray\lpars_pos_poi : ndarray\l|}", shape="record", style="solid"];
"NF4HEP.base.Plots" [color="black", fontcolor="black", label="{Plots|\l|savefig(figure_path: StrPath)\l}", shape="record", style="solid"];
"NF4HEP.base.Predictions" [color="black", fontcolor="black", label="{Predictions|allowed_attrs : Dict[str, List[str]]\lallowed_objects : List[str]\lallowed_types : Union\lbayesian_inference : Dict\lfrequentist_inference : Dict\lgelman_rubin : Dict\llogpdf_max : Dict\llogpdf_profiled_max : Dict\lmodel_evaluation : Dict\lobj_name : str\l|init_predictions(verbose: Optional[Union[int, bool]]): None\lreset_predictions(log: LogPredDict, verbose: Optional[Union[int, bool]]): None\lvalidate_predictions(): None\l}", shape="record", style="solid"];
"NF4HEP.resources.Resources" [color="black", fontcolor="black", label="{Resources|active_gpus : list\lavailable_cpu : list\lavailable_gpus\lgpu_mode : bool\l|check_tf_gpu(verbose)\lget_available_cpu(verbose)\lget_available_gpus(verbose)\lset_gpus(gpus_list, verbose)\lset_gpus_env(gpus_list, verbose)\l}", shape="record", style="solid"];
"NF4HEP.data.DataFileManager" -> "NF4HEP.base.FileManager" [arrowhead="empty", arrowtail="none"];
"NF4HEP.data.DataInference" -> "NF4HEP.base.Inference" [arrowhead="empty", arrowtail="none"];
"NF4HEP.data.DataParsManager" -> "NF4HEP.base.ParsManager" [arrowhead="empty", arrowtail="none"];
"NF4HEP.data.DataPlots" -> "NF4HEP.base.Plots" [arrowhead="empty", arrowtail="none"];
"NF4HEP.data.DataPredictions" -> "NF4HEP.base.Predictions" [arrowhead="empty", arrowtail="none"];
"NF4HEP.nf.NFFileManager" -> "NF4HEP.base.FileManager" [arrowhead="empty", arrowtail="none"];
"NF4HEP.nf.NFInference" -> "NF4HEP.base.Inference" [arrowhead="empty", arrowtail="none"];
"NF4HEP.nf.NFParsManager" -> "NF4HEP.base.ParsManager" [arrowhead="empty", arrowtail="none"];
"NF4HEP.nf.NFPlots" -> "NF4HEP.base.Plots" [arrowhead="empty", arrowtail="none"];
"NF4HEP.nf.NFPredictions" -> "NF4HEP.base.Predictions" [arrowhead="empty", arrowtail="none"];
"NF4HEP.base.Figures" -> "NF4HEP.data.Data" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="figures", style="solid"];
"NF4HEP.base.Figures" -> "NF4HEP.data.DataPlots" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="figures", style="solid"];
"NF4HEP.base.Figures" -> "NF4HEP.nf.NF" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="figures", style="solid"];
"NF4HEP.base.Figures" -> "NF4HEP.nf.NFPlots" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="figures", style="solid"];
"NF4HEP.base.Name" -> "NF4HEP.base.FileManager" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="name", style="solid"];
"NF4HEP.data.DataFileManager" -> "NF4HEP.data.Data" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="file_manager", style="solid"];
"NF4HEP.data.DataFileManager" -> "NF4HEP.data.DataPlots" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="file_manager", style="solid"];
"NF4HEP.data.DataParsManager" -> "NF4HEP.data.Data" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parameters", style="solid"];
"NF4HEP.data.DataParsManager" -> "NF4HEP.data.DataInference" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parameters", style="solid"];
"NF4HEP.data.DataParsManager" -> "NF4HEP.data.DataPlots" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parameters", style="solid"];
"NF4HEP.data.DataPredictions" -> "NF4HEP.data.Data" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="predictions", style="solid"];
"NF4HEP.data.DataPredictions" -> "NF4HEP.data.DataInference" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="predictions", style="solid"];
"NF4HEP.data.DataPredictions" -> "NF4HEP.data.DataPlots" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="predictions", style="solid"];
"NF4HEP.distributions.Distributions" -> "NF4HEP.nf.NF" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="base_distribution", style="solid"];
"NF4HEP.maf.MAFNetwork_custom" -> "NF4HEP.maf.MAFBijector_custom" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_shift_and_log_scale_fn", style="solid"];
"NF4HEP.maf.MAFNetwork_default" -> "NF4HEP.maf.MAFBijector_custom" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_shift_and_log_scale_fn", style="solid"];
"NF4HEP.nf.NFFileManager" -> "NF4HEP.nf.NF" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="file_manager", style="solid"];
"NF4HEP.nf.NFFileManager" -> "NF4HEP.nf.NFPlots" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="file_manager", style="solid"];
"NF4HEP.nf.NFParsManager" -> "NF4HEP.nf.NF" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parameters", style="solid"];
"NF4HEP.nf.NFParsManager" -> "NF4HEP.nf.NFInference" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parameters", style="solid"];
"NF4HEP.nf.NFParsManager" -> "NF4HEP.nf.NFPlots" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="parameters", style="solid"];
"NF4HEP.nf.NFPredictions" -> "NF4HEP.nf.NF" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="predictions", style="solid"];
"NF4HEP.nf.NFPredictions" -> "NF4HEP.nf.NFInference" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="predictions", style="solid"];
"NF4HEP.nf.NFPredictions" -> "NF4HEP.nf.NFPlots" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="predictions", style="solid"];
}
